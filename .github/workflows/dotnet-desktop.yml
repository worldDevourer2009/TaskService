name: .NET Web API CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: taskhandler
          POSTGRES_USER: taskhandler_user
          POSTGRES_PASSWORD: taskhandler_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready --username=taskhandler_user --dbname=taskhandler"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        dotnet-version: [ '9.0.x' ]

    env:
      ConnectionStrings__DefaultConnection: >-
        Host=localhost;
        Port=5432;
        Database=taskhandler;
        Username=taskhandler_user;
        Password=taskhandler_password;
      ConnectionStrings__Redis: localhost:6379
      JwtSettings__Issuer: ${{ secrets.JWT_ISSUER }}
      JwtSettings__Audience: ${{ secrets.JWT_AUDIENCE }}
      JwtSettings__Key: ${{ secrets.JWT_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install PostgreSQL and Redis clients
        run: sudo apt-get update && sudo apt-get install -y postgresql-client redis-tools

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Wait for Postgres and Redis
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h localhost -p 5432 -U taskhandler_user; do
            sleep 2
          done
          echo "PostgreSQL is ready!"
          
          echo "Waiting for Redis to be ready..."
          until redis-cli -h localhost -p 6379 ping; do
            sleep 2
          done
          echo "Redis is ready!"

      - name: Run tests
        run: |
          dotnet test --no-build --configuration Release \
            --logger "trx;LogFileName=test_results.trx" \
            --results-directory TestResults

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: TestResults/*.trx